// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String? @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  student         Student?
}

model Student {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  userId  String @db.ObjectId @unique

  firstName           String
  lastName            String
  dateOfBirth         DateTime?
  email               String
  phoneNumber         String
  city                String
  state               String
  profilePictureUrl   String?
  createdAt           DateTime @default(now())

  user   User    @relation(fields: [userId], references: [id])

  education Education[]
  skills Skill[]
  experiences Experience[]
}

model Education {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  institution     String
  degree          String?
  fieldOfStudy    String
  graduationYear  Int
  studentId   String @db.ObjectId

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model Skill {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  proficiency String?
  studentId   String @db.ObjectId

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model Experience {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?
  studentId   String @db.ObjectId

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
}
